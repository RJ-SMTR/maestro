name: Workflow

on:
  push:
    branches:
      - "*"
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  POSTGRESQL_DATABASE: ${{ secrets.POSTGRESQL_DATABASE }}
  POSTGRESQL_HOST: ${{ secrets.POSTGRESQL_HOST }}
  POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
  POSTGRESQL_USERNAME: ${{ secrets.POSTGRESQL_USERNAME }}
  GKE_ZONE: us-central1-c
  IMAGE: maestro-user-code

jobs:
  before:
    name: Check for dependency installation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"
          architecture: "x64"
      - name: Install dependencies
        run: pip install wheel && pip install --prefer-binary --use-deprecated=legacy-resolver -r requirements.txt

  tests:
    needs: before
    name: ${{ matrix.os }}${{ matrix.arch }} - Python ${{ matrix.python-version }} - tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x64]
        python-version: ["3.8.x"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Install dependencies
        run: pip install wheel && pip install --prefer-binary -r requirements.txt -r requirements-test.txt
      - name: Run tests
        run: |
          pytest

  lint:
    needs: before
    name: Dockerfiles linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          hadolint_ignore: DL3008
          reporter: github-pr-review

  build:
    needs: [lint, tests]
    name: Build and update deployments
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker with gcloud
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build Docker image
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            .

      - name: Publish Docker image
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Update image repository on values.yaml for dagster-user-deployments
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: "gke/dagster-user-deployments-values.yaml"
          propertyPath: "deployments.0.image.repository"
          value: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}
          commitChange: false
          updateFile: true

      - name: Update image tag on values.yaml for dagster-user-deployments
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: "gke/dagster-user-deployments-values.yaml"
          propertyPath: "deployments.0.image.tag"
          value: ${{ github.sha }}
          commitChange: false
          updateFile: true

      - name: Deploy User Code
        run: |-
          helm upgrade --install user-code ./helm/dagster-user-deployments/ -f gke/dagster-user-deployments-values.yaml -n dagster

      - name: Wait until User Code deployment is ready
        run: |-
          helm status user-code -n dagster
